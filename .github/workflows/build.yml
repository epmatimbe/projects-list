name: build

run-name: Build Project

on: [push]

env:
  PROJECT_NAME: project-list
  USER: ${{ github.actor }}
  AUTH_TOKEN:  ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Node modules Cache
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-node-modules-cache-${{ hashFiles('package-lock.json') }}
          path: |
            ~/.npm
            ./node_modules
      - name: Install dependencies
        run: npm install

  source-bundle:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - uses: actions/checkout@v4
      - name: Node modules Cache
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          key: ${{ runner.os }}-node-modules-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-cache-
          path: |
            ~/.npm
            ./node_modules
      - run: npm run build
      - name: Store build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: source-bundle
    steps:
      - uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.USER }}
          password: ${{ env.AUTH_TOKEN }}
      - run: ls -ga
      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.USER }}/${{ env.PROJECT_NAME }}:latest
